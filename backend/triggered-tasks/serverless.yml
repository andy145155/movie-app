service: ${self:custom.app_name}-${self:custom.service_name}

frameworkVersion: '3'

package:
  patterns:
    - '!requirements.txt'
    - '!sample/**'
    - '!scripts/**'
    - '!openapi.yml'
    - '../utils/**'

custom:
  app_name: 'movie-app'
  service_name: 'triggered-tasks'
  tf: ${file(../../deployment/resources/terraform.resources.json)}
  fargate_service: ${file(../../deployment/resources/sls.fargate.json)}
  FARGATE_SG_ID: ${self:custom.tf.fargate_security_group_id}
  DEFAULT_LAMBDA_ROLE_ARN: ${self:custom.tf.lambda_iam_role_arn}
  ESC_CLUSTER_ARN: ${self:custom.fargate_service.FargateClusterArn}
  DATA_PROCESSING_TASK_DEFINITION_ARN: ${self:custom.fargate_service.DataProcessingTaskDefinitionArn}
  MOVIES_SIMILARITY_DYNAMO_DB_NAME: ${self:custom.tf.movie_similarity_table_name}
  SNS_TOPIC_ARN: ${self:custom.tf.movie_app_sns_arn}
  MOVE_CSV_PROCESSED_BUCKET_NAME: ${self:custom.tf.movie_csv_processed_bucket_name}
  MOVE_CSV_SOURCE_BUCKET_NAME: ${self:custom.tf.movie_csv_source_bucket_name}
  SERVERLESS_BUCKET_NAME: ${self:custom.tf.movie_serverless_bucket_name}
  SUBNET_A_ID: ${self:custom.tf.public_subnets.0}
  SUBNET_B_ID: ${self:custom.tf.public_subnets.1}
  GLUE_CRAWLER_CREDITS: ${self:custom.tf.movie_app_glue_crawlers_name.credits}
  GLUE_CRAWLER_MOVIES: ${self:custom.tf.movie_app_glue_crawlers_name.movies}
  GLUE_CRAWLER_SIMILARITY: ${self:custom.tf.movie_app_glue_crawlers_name.similarity}

  # serverless-stack-output
  output:
    handler: scripts/output.handler
    file_path: ../../deployment/resources/sls.triggered-tasks.json

provider:
  name: aws
  region: ap-southeast-1
  architecture: arm64
  runtime: python3.11
  timeout: 300
  deploymentBucket:
    name: ${self:custom.SERVERLESS_BUCKET_NAME}
    maxPreviousDeploymentArtifacts: 3
    blockPublicAccess: true
    serverSideEncryption: AES256
  iam:
    role: ${self:custom.DEFAULT_LAMBDA_ROLE_ARN}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:iam::'
            - Ref: 'AWS::AccountId'
            - ':role/ecsTaskExecutionRole'

layers:
  MovieAppTriggeredTask:
    path: layers
    name: ${self:custom.app_name}-${self:custom.service_name}-layer
    compatibleRuntimes:
      - python3.11

functions:
  triggerFargate:
    handler: functions/triggerFargate.handler
    layers:
      - { Ref: MovieAppTriggeredTaskLambdaLayer }
    events:
      - sns:
          arn: ${self:custom.SNS_TOPIC_ARN}
    environment:
      SUBNET_A_ID: ${self:custom.SUBNET_A_ID}
      SUBNET_B_ID: ${self:custom.SUBNET_B_ID}
      FARGATE_SG_ID: ${self:custom.FARGATE_SG_ID}
      MOVIE_APP_ESC_CLUSTER_ARN: ${self:custom.ESC_CLUSTER_ARN}
      MOVIES_SIMILARITY_DYNAMO_DB_NAME: ${self:custom.MOVIES_SIMILARITY_DYNAMO_DB_NAME}
      DATA_PROCESSING_TASK_DEFINITION_ARN: ${self:custom.DATA_PROCESSING_TASK_DEFINITION_ARN}
      MOVE_CSV_PROCESSED_BUCKET_NAME: ${self:custom.MOVE_CSV_PROCESSED_BUCKET_NAME}
      MOVE_CSV_SOURCE_BUCKET_NAME: ${self:custom.MOVE_CSV_SOURCE_BUCKET_NAME}

  csvToS3Database:
    handler: functions/csvToS3Database.handler
    layers:
      - { Ref: MovieAppTriggeredTaskLambdaLayer }
    events:
      - sns:
          arn: ${self:custom.SNS_TOPIC_ARN}
    environment:
      MOVE_CSV_PROCESSED_BUCKET_NAME: ${self:custom.MOVE_CSV_PROCESSED_BUCKET_NAME}

  # triggerGlueCrawler:
  #   handler: functions/triggerGlueCrawler.handler
  #   events:
  #     - s3:
  #         bucket: ${self:custom.MOVE_CSV_PROCESSED_BUCKET_NAME}
  #         event: s3:ObjectCreated:*
  #         existing: true
  #   environment:
  #     GLUE_CRAWLER_CREDITS: ${self:custom.GLUE_CRAWLER_CREDITS}
  #     GLUE_CRAWLER_MOVIES: ${self:custom.GLUE_CRAWLER_MOVIES}
  #     GLUE_CRAWLER_SIMILARITY: ${self:custom.GLUE_CRAWLER_SIMILARITY}

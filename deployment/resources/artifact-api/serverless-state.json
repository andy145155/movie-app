{
  "service": {
    "service": "movie-app-api",
    "serviceObject": {
      "name": "movie-app-api"
    },
    "provider": {
      "name": "aws",
      "region": "ap-southeast-1",
      "architecture": "arm64",
      "runtime": "python3.11",
      "timeout": 30,
      "deploymentBucket": "movie-app-serverless-bucket",
      "iam": {
        "role": "arn:aws:iam::410370150231:role/movie-app-LambdaExecuteRole"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "iam:PassRole"
          ],
          "Resource": {
            "Fn::Join": [
              "",
              [
                "arn:aws:iam::",
                {
                  "Ref": "AWS::AccountId"
                },
                ":role/ecsTaskExecutionRole"
              ]
            ]
          }
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "movie-app-serverless-bucket",
        "maxPreviousDeploymentArtifacts": 3,
        "blockPublicAccess": true,
        "serverSideEncryption": "AES256"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetMoviesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/movie-app-api-dev-getMovies"
            }
          },
          "SetUserSelectedMoviesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/movie-app-api-dev-setUserSelectedMovies"
            }
          },
          "GetUserRecommendMoviesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/movie-app-api-dev-getUserRecommendMovies"
            }
          },
          "WarmUpPluginDefaultLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/movie-app-api-dev-warmup-plugin-default"
            }
          },
          "MovieAppApiLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": "movie-app-serverless-bucket",
                "S3Key": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z/MovieAppApi.zip"
              },
              "LayerName": "movie-app-api-layer",
              "CompatibleRuntimes": [
                "python3.11"
              ]
            }
          },
          "GetMoviesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "movie-app-serverless-bucket",
                "S3Key": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z/movie-app-api.zip"
              },
              "Handler": "functions/getMovies.handler",
              "Runtime": "python3.11",
              "FunctionName": "movie-app-api-dev-getMovies",
              "MemorySize": 1024,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "MOVIES_SIMILARITY_DYNAMO_DB_NAME": "movie-similarity"
                }
              },
              "Role": "arn:aws:iam::410370150231:role/movie-app-LambdaExecuteRole",
              "Layers": [
                {
                  "Ref": "MovieAppApiLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "GetMoviesLogGroup"
            ]
          },
          "SetUserSelectedMoviesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "movie-app-serverless-bucket",
                "S3Key": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z/movie-app-api.zip"
              },
              "Handler": "functions/setUserSelectedMovies.handler",
              "Runtime": "python3.11",
              "FunctionName": "movie-app-api-dev-setUserSelectedMovies",
              "MemorySize": 1024,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "USER_SELECTION_DYNAMO_DB_NAME": "user-selection",
                  "MOVIES_SIMILARITY_DYNAMO_DB_NAME": "movie-similarity"
                }
              },
              "Role": "arn:aws:iam::410370150231:role/movie-app-LambdaExecuteRole",
              "Layers": [
                {
                  "Ref": "MovieAppApiLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "SetUserSelectedMoviesLogGroup"
            ]
          },
          "GetUserRecommendMoviesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "movie-app-serverless-bucket",
                "S3Key": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z/movie-app-api.zip"
              },
              "Handler": "functions/getUserRecommendMovies.handler",
              "Runtime": "python3.11",
              "FunctionName": "movie-app-api-dev-getUserRecommendMovies",
              "MemorySize": 1024,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "USER_SELECTION_DYNAMO_DB_NAME": "user-selection",
                  "MOVIES_SIMILARITY_DYNAMO_DB_NAME": "movie-similarity"
                }
              },
              "Role": "arn:aws:iam::410370150231:role/movie-app-LambdaExecuteRole",
              "Layers": [
                {
                  "Ref": "MovieAppApiLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "GetUserRecommendMoviesLogGroup"
            ]
          },
          "WarmUpPluginDefaultLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "movie-app-serverless-bucket",
                "S3Key": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z/warmUpPluginDefault.zip"
              },
              "Handler": ".warmup/default/index.warmUp",
              "Runtime": "nodejs18.x",
              "FunctionName": "movie-app-api-dev-warmup-plugin-default",
              "MemorySize": 128,
              "Timeout": 10,
              "Architectures": [
                "arm64"
              ],
              "Description": "Serverless WarmUp Plugin (warmer \"default\")",
              "Role": {
                "Fn::GetAtt": [
                  "WarmUpPluginDefaultRole",
                  "Arn"
                ]
              },
              "Layers": []
            },
            "DependsOn": [
              "WarmUpPluginDefaultLogGroup",
              "WarmUpPluginDefaultRole"
            ]
          },
          "WarmUpPluginDefaultLambdaVersionVNYprKF0y8OgVNE2Oc2tKZ3CqqHf1BvaO0BTW1Nw0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WarmUpPluginDefaultLambdaFunction"
              },
              "CodeSha256": "SIIxTuxcsVIKW6+CtMvt59zGnLD0h7rsZWRSa//bFz0=",
              "Description": "Serverless WarmUp Plugin (warmer \"default\")"
            }
          },
          "GetMoviesLambdaVersionaVB18lB9so44tHPiluq86JRVoqvWlTNcpbCsfIMiQGk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMoviesLambdaFunction"
              },
              "CodeSha256": "RvG7N3R19wQw0gqcDSs8V5SUcQaZ3JdGADcsuDNWDU4="
            }
          },
          "SetUserSelectedMoviesLambdaVersionoZ0deTGDGpkhDYRzkKkne6Vd8LFf7uE0CwdfLEH3928": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SetUserSelectedMoviesLambdaFunction"
              },
              "CodeSha256": "RvG7N3R19wQw0gqcDSs8V5SUcQaZ3JdGADcsuDNWDU4="
            }
          },
          "GetUserRecommendMoviesLambdaVersionN7Cs0neUkz4YiesF4wbgZlA5LMiQkGIfhwdSjEB0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserRecommendMoviesLambdaFunction"
              },
              "CodeSha256": "RvG7N3R19wQw0gqcDSs8V5SUcQaZ3JdGADcsuDNWDU4="
            }
          },
          "WarmUpPluginDefaultEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(5 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "WarmUpPluginDefaultLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "warmUpPluginDefaultSchedule"
                }
              ]
            }
          },
          "WarmUpPluginDefaultLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WarmUpPluginDefaultLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "WarmUpPluginDefaultEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Body": {
                "openapi": "3.0.2",
                "info": {
                  "title": "movie-app-api",
                  "description": "Movie app API",
                  "version": "0.0.1"
                },
                "x-amazon-apigateway-request-validator": "all",
                "x-amazon-apigateway-request-validators": {
                  "all": {
                    "validateRequestBody": true,
                    "validateRequestParameters": true
                  },
                  "params-only": {
                    "validateRequestBody": false,
                    "validateRequestParameters": true
                  }
                },
                "x-amazon-apigateway-gateway-responses": {
                  "BAD_REQUEST_PARAMETERS": {
                    "statusCode": 400,
                    "responseParameters": {
                      "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                    },
                    "responseTemplates": {
                      "application/json": "{ \"message: \"Bad Request\", \"cause\": $context.error.validationErrorString }\n"
                    }
                  },
                  "BAD_REQUEST_BODY": {
                    "statusCode": 400,
                    "responseParameters": {
                      "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                    },
                    "responseTemplates": {
                      "application/json": "{ \"message: \"Bad Request\", \"cause\": $context.error.validationErrorString }\n"
                    }
                  },
                  "DEFAULT_4XX": {
                    "responseParameters": {
                      "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                    }
                  },
                  "DEFAULT_5XX": {
                    "responseParameters": {
                      "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                    }
                  }
                },
                "x-amazon-apigateway-cors": {
                  "allowOrigins": [
                    "*"
                  ],
                  "allowMethods": [
                    "GET",
                    "OPTIONS"
                  ],
                  "allowHeaders": [
                    "x-amzm-header",
                    "x-apigateway-header",
                    "x-api-key",
                    "authorization",
                    "x-amz-date",
                    "content-type"
                  ]
                },
                "paths": {
                  "/movies": {
                    "options": {
                      "summary": "CORS support",
                      "description": "Enable CORS by returning correct headers\n",
                      "tags": [
                        "CORS"
                      ],
                      "responses": {
                        "200": {
                          "description": "Default response for CORS method",
                          "headers": {
                            "Access-Control-Allow-Origin": {
                              "schema": {
                                "type": "string"
                              }
                            },
                            "Access-Control-Allow-Methods": {
                              "schema": {
                                "type": "string"
                              }
                            },
                            "Access-Control-Allow-Headers": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {}
                        }
                      },
                      "x-amazon-apigateway-integration": {
                        "type": "mock",
                        "requestTemplates": {
                          "application/json": "{\n  \"statusCode\" : 200\n}\n"
                        },
                        "responses": {
                          "default": {
                            "statusCode": "200",
                            "responseParameters": {
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,Access-Control-Allow-Origin'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                              "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                              "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end\n"
                            }
                          }
                        }
                      }
                    },
                    "get": {
                      "security": [
                        {
                          "UserPoolAuthorizer": []
                        }
                      ],
                      "operationId": "getMovies",
                      "summary": "Retrieve a list of Movies from TMDB 5000 datasets",
                      "parameters": [
                        {
                          "name": "random",
                          "in": "query",
                          "schema": {
                            "type": "string",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "required": true,
                          "description": "Return random movie list or not"
                        },
                        {
                          "name": "limit",
                          "in": "query",
                          "schema": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "required": true,
                          "description": "Length of the movie list"
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "headers": {
                            "Access-Control-Allow-Origin": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "$ref": "#/components/schemas/Movies"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "400 response"
                        }
                      },
                      "x-amazon-apigateway-integration": {
                        "uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetMoviesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        },
                        "passthroughBehavior": "when_no_match",
                        "httpMethod": "POST",
                        "type": "aws_proxy",
                        "responses": {
                          "default": {
                            "statusCode": "200"
                          }
                        }
                      }
                    }
                  },
                  "/user/selectedMovies": {
                    "options": {
                      "summary": "CORS support",
                      "description": "Enable CORS by returning correct headers\n",
                      "tags": [
                        "CORS"
                      ],
                      "responses": {
                        "200": {
                          "description": "Default response for CORS method",
                          "headers": {
                            "Access-Control-Allow-Origin": {
                              "schema": {
                                "type": "string"
                              }
                            },
                            "Access-Control-Allow-Methods": {
                              "schema": {
                                "type": "string"
                              }
                            },
                            "Access-Control-Allow-Headers": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {}
                        }
                      },
                      "x-amazon-apigateway-integration": {
                        "type": "mock",
                        "requestTemplates": {
                          "application/json": "{\n  \"statusCode\" : 200\n}\n"
                        },
                        "responses": {
                          "default": {
                            "statusCode": "200",
                            "responseParameters": {
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,Access-Control-Allow-Origin'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'",
                              "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "responseTemplates": {
                              "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end\n"
                            }
                          }
                        }
                      }
                    },
                    "get": {
                      "security": [
                        {
                          "UserPoolAuthorizer": []
                        }
                      ],
                      "operationId": "getUserRecommendMovies",
                      "summary": "Retrieve user recommended movies",
                      "parameters": [
                        {
                          "name": "email",
                          "in": "query",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "headers": {
                            "Access-Control-Allow-Origin": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "$ref": "#/components/schemas/UserMovieDetails"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "400 response"
                        }
                      },
                      "x-amazon-apigateway-integration": {
                        "uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetUserRecommendMoviesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        },
                        "passthroughBehavior": "when_no_match",
                        "httpMethod": "POST",
                        "type": "aws_proxy",
                        "responses": {
                          "default": {
                            "statusCode": "200"
                          }
                        }
                      }
                    },
                    "post": {
                      "security": [
                        {
                          "UserPoolAuthorizer": []
                        }
                      ],
                      "operationId": "setUserSelectedMovies",
                      "summary": "Set user selected movie",
                      "requestBody": {
                        "required": true,
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "email": {
                                  "type": "string"
                                },
                                "selectedMovies": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "movieId": {
                                        "type": "string"
                                      },
                                      "similarity": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "responses": {
                        "200": {
                          "description": "200 response",
                          "headers": {
                            "Access-Control-Allow-Origin": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "customer": {
                                    "$ref": "#/components/schemas/Movies"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "400 response"
                        }
                      },
                      "x-amazon-apigateway-integration": {
                        "uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "SetUserSelectedMoviesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        },
                        "passthroughBehavior": "when_no_match",
                        "httpMethod": "POST",
                        "type": "aws_proxy",
                        "responses": {
                          "default": {
                            "statusCode": "200"
                          }
                        }
                      }
                    }
                  }
                },
                "components": {
                  "securitySchemes": {
                    "UserPoolAuthorizer": {
                      "type": "apiKey",
                      "name": "Authorization",
                      "in": "header",
                      "x-amazon-apigateway-authtype": "cognito_user_pools",
                      "x-amazon-apigateway-authorizer": {
                        "type": "cognito_user_pools",
                        "providerARNs": [
                          "arn:aws:cognito-idp:ap-southeast-1:410370150231:userpool/ap-southeast-1_yz7eb44ia"
                        ]
                      }
                    }
                  },
                  "schemas": {
                    "Body": {
                      "type": "object"
                    },
                    "Empty": {
                      "type": "object"
                    },
                    "Movies": {
                      "type": "object",
                      "properties": {
                        "movieId": {
                          "type": "string"
                        },
                        "poster_path": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "movieId",
                        "poster_path",
                        "name"
                      ]
                    },
                    "UserMovieDetails": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "recommendedMovies": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "selectedMovies": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "ApiGatewayDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "v1",
              "DeploymentId": {
                "Ref": "ApiGatewayDeployment"
              }
            }
          },
          "ApiGatewayBasePathMapping": {
            "Type": "AWS::ApiGateway::BasePathMapping",
            "Properties": {
              "DomainName": "api.movieapp.paohenghsu.com",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Stage": {
                "Ref": "ApiGatewayStage"
              }
            }
          },
          "PermissionToGetMovies": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMoviesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "PermissionToSetUserSelectedMovies": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SetUserSelectedMoviesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "PermissionToGetUserRecommendMovies": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserRecommendMoviesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "WarmUpPluginDefaultRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "movie-app-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "default",
                    "role"
                  ]
                ]
              },
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "movie-app-api",
                        "dev",
                        "warmer",
                        "default",
                        "policy"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/movie-app-api-dev-warmup-plugin-default:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/movie-app-api-dev-warmup-plugin-default:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:movie-app-api-dev-getMovies*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:movie-app-api-dev-setUserSelectedMovies*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:movie-app-api-dev-getUserRecommendMovies*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ec2:CreateNetworkInterface",
                          "ec2:DescribeNetworkInterfaces",
                          "ec2:DetachNetworkInterface",
                          "ec2:DeleteNetworkInterface"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "movie-app-serverless-bucket",
            "Export": {
              "Name": "sls-movie-app-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "MovieAppApiLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "MovieAppApiLambdaLayer"
            },
            "Export": {
              "Name": "sls-movie-app-api-dev-MovieAppApiLambdaLayerQualifiedArn"
            }
          },
          "MovieAppApiLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "a8c27814ffc1b26e37f530ba6113e4b9eb282d35",
            "Export": {
              "Name": "sls-movie-app-api-dev-MovieAppApiLambdaLayerHash"
            }
          },
          "MovieAppApiLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z/MovieAppApi.zip",
            "Export": {
              "Name": "sls-movie-app-api-dev-MovieAppApiLambdaLayerS3Key"
            }
          },
          "WarmUpPluginDefaultLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WarmUpPluginDefaultLambdaVersionVNYprKF0y8OgVNE2Oc2tKZ3CqqHf1BvaO0BTW1Nw0"
            },
            "Export": {
              "Name": "sls-movie-app-api-dev-WarmUpPluginDefaultLambdaFunctionQualifiedArn"
            }
          },
          "GetMoviesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMoviesLambdaVersionaVB18lB9so44tHPiluq86JRVoqvWlTNcpbCsfIMiQGk"
            },
            "Export": {
              "Name": "sls-movie-app-api-dev-GetMoviesLambdaFunctionQualifiedArn"
            }
          },
          "SetUserSelectedMoviesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SetUserSelectedMoviesLambdaVersionoZ0deTGDGpkhDYRzkKkne6Vd8LFf7uE0CwdfLEH3928"
            },
            "Export": {
              "Name": "sls-movie-app-api-dev-SetUserSelectedMoviesLambdaFunctionQualifiedArn"
            }
          },
          "GetUserRecommendMoviesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserRecommendMoviesLambdaVersionN7Cs0neUkz4YiesF4wbgZlA5LMiQkGIfhwdSjEB0"
            },
            "Export": {
              "Name": "sls-movie-app-api-dev-GetUserRecommendMoviesLambdaFunctionQualifiedArn"
            }
          },
          "ApiId": {
            "Value": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "warmup": {
        "default": {
          "payload": {
            "source": "warmup"
          }
        }
      },
      "app_name": "movie-app",
      "service_name": "api",
      "region": "ap-southeast-1",
      "tf": {
        "fargate_security_group_id": "sg-01156858c7871ec6c",
        "fargate_task_role_arn": "arn:aws:iam::410370150231:role/movie-app-FargateTaskRole",
        "lambda_iam_role_arn": "arn:aws:iam::410370150231:role/movie-app-LambdaExecuteRole",
        "lambda_security_group_id": "sg-0735c702b1cd455e6",
        "movie_app_bucket_www_name": "www.movieapp.paohenghsu.com",
        "movie_app_glue_crawlers_name": {
          "credits": "credits-csv",
          "movies": "movies-csv",
          "similarity": "similarity-csv"
        },
        "movie_app_sns_arn": "arn:aws:sns:ap-southeast-1:410370150231:movie-app-s3-triggered-event",
        "movie_app_user_pool_arn": "arn:aws:cognito-idp:ap-southeast-1:410370150231:userpool/ap-southeast-1_yz7eb44ia",
        "movie_app_user_pool_client_id": "4t3f1n3ptj21omm15kd3jjastn",
        "movie_app_user_pool_id": "ap-southeast-1_yz7eb44ia",
        "movie_app_www_distribution_id": "E14SG1HHD3N65C",
        "movie_csv_processed_bucket_name": "movie-app-csv-processed-bucket",
        "movie_csv_source_bucket_name": "movie-app-csv-source-bucket",
        "movie_serverless_bucket_name": "movie-app-serverless-bucket",
        "movie_similarity_table_name": "movie-similarity",
        "movie_user_selection_name": "user-selection",
        "public_subnets": [
          "subnet-069ee4c1a5955765d",
          "subnet-0ce7bc386fe60d549"
        ]
      },
      "DEFAULT_LAMBDA_ROLE_ARN": "arn:aws:iam::410370150231:role/movie-app-LambdaExecuteRole",
      "SNS_TOPIC_ARN": "arn:aws:sns:ap-southeast-1:410370150231:movie-app-s3-triggered-event",
      "MOVIE_APP_USERPOOL_ARN": "arn:aws:cognito-idp:ap-southeast-1:410370150231:userpool/ap-southeast-1_yz7eb44ia",
      "SERVERLESS_BUCKET_NAME": "movie-app-serverless-bucket",
      "MOVIES_SIMILARITY_DYNAMO_DB_NAME": "movie-similarity",
      "USER_SELECTION_DYNAMO_DB_NAME": "user-selection",
      "output": {
        "handler": "scripts/output.handler",
        "file_path": "../../deployment/resources/sls.api.json"
      }
    },
    "plugins": [
      "serverless-plugin-warmup",
      "serverless-stack-output"
    ],
    "pluginsData": {},
    "functions": {
      "getMovies": {
        "handler": "functions/getMovies.handler",
        "environment": {
          "MOVIES_SIMILARITY_DYNAMO_DB_NAME": "movie-similarity"
        },
        "warmup": {
          "default": {
            "enabled": true
          }
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMoviesLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [],
        "name": "movie-app-api-dev-getMovies",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.11",
        "vpc": {},
        "versionLogicalId": "GetMoviesLambdaVersionaVB18lB9so44tHPiluq86JRVoqvWlTNcpbCsfIMiQGk"
      },
      "setUserSelectedMovies": {
        "handler": "functions/setUserSelectedMovies.handler",
        "environment": {
          "USER_SELECTION_DYNAMO_DB_NAME": "user-selection",
          "MOVIES_SIMILARITY_DYNAMO_DB_NAME": "movie-similarity"
        },
        "warmup": {
          "default": {
            "enabled": true
          }
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SetUserSelectedMoviesLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [],
        "name": "movie-app-api-dev-setUserSelectedMovies",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.11",
        "vpc": {},
        "versionLogicalId": "SetUserSelectedMoviesLambdaVersionoZ0deTGDGpkhDYRzkKkne6Vd8LFf7uE0CwdfLEH3928"
      },
      "getUserRecommendMovies": {
        "handler": "functions/getUserRecommendMovies.handler",
        "environment": {
          "USER_SELECTION_DYNAMO_DB_NAME": "user-selection",
          "MOVIES_SIMILARITY_DYNAMO_DB_NAME": "movie-similarity"
        },
        "warmup": {
          "default": {
            "enabled": true
          }
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserRecommendMoviesLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [],
        "name": "movie-app-api-dev-getUserRecommendMovies",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.11",
        "vpc": {},
        "versionLogicalId": "GetUserRecommendMoviesLambdaVersionN7Cs0neUkz4YiesF4wbgZlA5LMiQkGIfhwdSjEB0"
      },
      "warmUpPluginDefault": {
        "description": "Serverless WarmUp Plugin (warmer \"default\")",
        "events": [
          {
            "schedule": "rate(5 minutes)"
          }
        ],
        "handler": ".warmup/default/index.warmUp",
        "memorySize": 128,
        "name": "movie-app-api-dev-warmup-plugin-default",
        "runtime": "nodejs18.x",
        "package": {
          "individually": true,
          "patterns": [
            "!**",
            ".warmup/default/**"
          ],
          "artifact": "/home/runner/work/movie-app/movie-app/backend/api/.serverless/warmUpPluginDefault.zip"
        },
        "timeout": 10,
        "role": "WarmUpPluginDefaultRole",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"WarmUpPluginDefaultLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "memory": 128,
        "vpc": {},
        "versionLogicalId": "WarmUpPluginDefaultLambdaVersionVNYprKF0y8OgVNE2Oc2tKZ3CqqHf1BvaO0BTW1Nw0"
      }
    },
    "resources": {
      "Resources": {
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Body": {
              "openapi": "3.0.2",
              "info": {
                "title": "movie-app-api",
                "description": "Movie app API",
                "version": "0.0.1"
              },
              "x-amazon-apigateway-request-validator": "all",
              "x-amazon-apigateway-request-validators": {
                "all": {
                  "validateRequestBody": true,
                  "validateRequestParameters": true
                },
                "params-only": {
                  "validateRequestBody": false,
                  "validateRequestParameters": true
                }
              },
              "x-amazon-apigateway-gateway-responses": {
                "BAD_REQUEST_PARAMETERS": {
                  "statusCode": 400,
                  "responseParameters": {
                    "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                  },
                  "responseTemplates": {
                    "application/json": "{ \"message: \"Bad Request\", \"cause\": $context.error.validationErrorString }\n"
                  }
                },
                "BAD_REQUEST_BODY": {
                  "statusCode": 400,
                  "responseParameters": {
                    "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                  },
                  "responseTemplates": {
                    "application/json": "{ \"message: \"Bad Request\", \"cause\": $context.error.validationErrorString }\n"
                  }
                },
                "DEFAULT_4XX": {
                  "responseParameters": {
                    "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                  }
                },
                "DEFAULT_5XX": {
                  "responseParameters": {
                    "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
                  }
                }
              },
              "x-amazon-apigateway-cors": {
                "allowOrigins": [
                  "*"
                ],
                "allowMethods": [
                  "GET",
                  "OPTIONS"
                ],
                "allowHeaders": [
                  "x-amzm-header",
                  "x-apigateway-header",
                  "x-api-key",
                  "authorization",
                  "x-amz-date",
                  "content-type"
                ]
              },
              "paths": {
                "/movies": {
                  "options": {
                    "summary": "CORS support",
                    "description": "Enable CORS by returning correct headers\n",
                    "tags": [
                      "CORS"
                    ],
                    "responses": {
                      "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                          "Access-Control-Allow-Origin": {
                            "schema": {
                              "type": "string"
                            }
                          },
                          "Access-Control-Allow-Methods": {
                            "schema": {
                              "type": "string"
                            }
                          },
                          "Access-Control-Allow-Headers": {
                            "schema": {
                              "type": "string"
                            }
                          }
                        },
                        "content": {}
                      }
                    },
                    "x-amazon-apigateway-integration": {
                      "type": "mock",
                      "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                      },
                      "responses": {
                        "default": {
                          "statusCode": "200",
                          "responseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,Access-Control-Allow-Origin'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                            "method.response.header.Access-Control-Allow-Origin": "'*'"
                          },
                          "responseTemplates": {
                            "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end\n"
                          }
                        }
                      }
                    }
                  },
                  "get": {
                    "security": [
                      {
                        "UserPoolAuthorizer": []
                      }
                    ],
                    "operationId": "getMovies",
                    "summary": "Retrieve a list of Movies from TMDB 5000 datasets",
                    "parameters": [
                      {
                        "name": "random",
                        "in": "query",
                        "schema": {
                          "type": "string",
                          "enum": [
                            true,
                            false
                          ]
                        },
                        "required": true,
                        "description": "Return random movie list or not"
                      },
                      {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "required": true,
                        "description": "Length of the movie list"
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "headers": {
                          "Access-Control-Allow-Origin": {
                            "schema": {
                              "type": "string"
                            }
                          }
                        },
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "customer": {
                                  "$ref": "#/components/schemas/Movies"
                                }
                              }
                            }
                          }
                        }
                      },
                      "400": {
                        "description": "400 response"
                      }
                    },
                    "x-amazon-apigateway-integration": {
                      "uri": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:apigateway:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt": [
                                "GetMoviesLambdaFunction",
                                "Arn"
                              ]
                            },
                            "/invocations"
                          ]
                        ]
                      },
                      "passthroughBehavior": "when_no_match",
                      "httpMethod": "POST",
                      "type": "aws_proxy",
                      "responses": {
                        "default": {
                          "statusCode": "200"
                        }
                      }
                    }
                  }
                },
                "/user/selectedMovies": {
                  "options": {
                    "summary": "CORS support",
                    "description": "Enable CORS by returning correct headers\n",
                    "tags": [
                      "CORS"
                    ],
                    "responses": {
                      "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                          "Access-Control-Allow-Origin": {
                            "schema": {
                              "type": "string"
                            }
                          },
                          "Access-Control-Allow-Methods": {
                            "schema": {
                              "type": "string"
                            }
                          },
                          "Access-Control-Allow-Headers": {
                            "schema": {
                              "type": "string"
                            }
                          }
                        },
                        "content": {}
                      }
                    },
                    "x-amazon-apigateway-integration": {
                      "type": "mock",
                      "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                      },
                      "responses": {
                        "default": {
                          "statusCode": "200",
                          "responseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,Access-Control-Allow-Origin'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'",
                            "method.response.header.Access-Control-Allow-Origin": "'*'"
                          },
                          "responseTemplates": {
                            "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end\n"
                          }
                        }
                      }
                    }
                  },
                  "get": {
                    "security": [
                      {
                        "UserPoolAuthorizer": []
                      }
                    ],
                    "operationId": "getUserRecommendMovies",
                    "summary": "Retrieve user recommended movies",
                    "parameters": [
                      {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "headers": {
                          "Access-Control-Allow-Origin": {
                            "schema": {
                              "type": "string"
                            }
                          }
                        },
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "customer": {
                                  "$ref": "#/components/schemas/UserMovieDetails"
                                }
                              }
                            }
                          }
                        }
                      },
                      "400": {
                        "description": "400 response"
                      }
                    },
                    "x-amazon-apigateway-integration": {
                      "uri": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:apigateway:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt": [
                                "GetUserRecommendMoviesLambdaFunction",
                                "Arn"
                              ]
                            },
                            "/invocations"
                          ]
                        ]
                      },
                      "passthroughBehavior": "when_no_match",
                      "httpMethod": "POST",
                      "type": "aws_proxy",
                      "responses": {
                        "default": {
                          "statusCode": "200"
                        }
                      }
                    }
                  },
                  "post": {
                    "security": [
                      {
                        "UserPoolAuthorizer": []
                      }
                    ],
                    "operationId": "setUserSelectedMovies",
                    "summary": "Set user selected movie",
                    "requestBody": {
                      "required": true,
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "selectedMovies": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "movieId": {
                                      "type": "string"
                                    },
                                    "similarity": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "responses": {
                      "200": {
                        "description": "200 response",
                        "headers": {
                          "Access-Control-Allow-Origin": {
                            "schema": {
                              "type": "string"
                            }
                          }
                        },
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "customer": {
                                  "$ref": "#/components/schemas/Movies"
                                }
                              }
                            }
                          }
                        }
                      },
                      "400": {
                        "description": "400 response"
                      }
                    },
                    "x-amazon-apigateway-integration": {
                      "uri": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:apigateway:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt": [
                                "SetUserSelectedMoviesLambdaFunction",
                                "Arn"
                              ]
                            },
                            "/invocations"
                          ]
                        ]
                      },
                      "passthroughBehavior": "when_no_match",
                      "httpMethod": "POST",
                      "type": "aws_proxy",
                      "responses": {
                        "default": {
                          "statusCode": "200"
                        }
                      }
                    }
                  }
                }
              },
              "components": {
                "securitySchemes": {
                  "UserPoolAuthorizer": {
                    "type": "apiKey",
                    "name": "Authorization",
                    "in": "header",
                    "x-amazon-apigateway-authtype": "cognito_user_pools",
                    "x-amazon-apigateway-authorizer": {
                      "type": "cognito_user_pools",
                      "providerARNs": [
                        "arn:aws:cognito-idp:ap-southeast-1:410370150231:userpool/ap-southeast-1_yz7eb44ia"
                      ]
                    }
                  }
                },
                "schemas": {
                  "Body": {
                    "type": "object"
                  },
                  "Empty": {
                    "type": "object"
                  },
                  "Movies": {
                    "type": "object",
                    "properties": {
                      "movieId": {
                        "type": "string"
                      },
                      "poster_path": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "movieId",
                      "poster_path",
                      "name"
                    ]
                  },
                  "UserMovieDetails": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "recommendedMovies": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "selectedMovies": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "ApiGatewayDeployment": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayStage": {
          "Type": "AWS::ApiGateway::Stage",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "v1",
            "DeploymentId": {
              "Ref": "ApiGatewayDeployment"
            }
          }
        },
        "ApiGatewayBasePathMapping": {
          "Type": "AWS::ApiGateway::BasePathMapping",
          "Properties": {
            "DomainName": "api.movieapp.paohenghsu.com",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "Stage": {
              "Ref": "ApiGatewayStage"
            }
          }
        },
        "PermissionToGetMovies": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetMoviesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com"
          }
        },
        "PermissionToSetUserSelectedMovies": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "SetUserSelectedMoviesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com"
          }
        },
        "PermissionToGetUserRecommendMovies": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetUserRecommendMoviesLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com"
          }
        },
        "WarmUpPluginDefaultRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "movie-app-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "default",
                  "role"
                ]
              ]
            },
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "movie-app-api",
                      "dev",
                      "warmer",
                      "default",
                      "policy"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/movie-app-api-dev-warmup-plugin-default:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/movie-app-api-dev-warmup-plugin-default:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:movie-app-api-dev-getMovies*"
                        },
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:movie-app-api-dev-setUserSelectedMovies*"
                        },
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:movie-app-api-dev-getUserRecommendMovies*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ec2:CreateNetworkInterface",
                        "ec2:DescribeNetworkInterfaces",
                        "ec2:DetachNetworkInterface",
                        "ec2:DeleteNetworkInterface"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {
        "ApiId": {
          "Value": {
            "Ref": "ApiGatewayRestApi"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "movie-app-api",
      "frameworkVersion": "3",
      "package": {
        "patterns": [
          "!scripts/**",
          "!layers/**",
          "!tests/**",
          "!.pytest_cache/**"
        ],
        "artifactsS3KeyDirname": "serverless/movie-app-api/dev/code-artifacts",
        "deploymentBucket": "movie-app-serverless-bucket",
        "artifact": "/home/runner/work/movie-app/movie-app/backend/api/.serverless/movie-app-api.zip",
        "artifactDirectoryName": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "layers": {
        "MovieAppApi": {
          "path": "layers",
          "name": "movie-app-api-layer",
          "compatibleRuntimes": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"MovieAppApiLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
          },
          "package": {
            "artifact": "/home/runner/work/movie-app/movie-app/backend/api/.serverless/MovieAppApi.zip"
          }
        }
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"layers\"]"
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/runner/work/movie-app/movie-app/backend/api/.serverless/movie-app-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/movie-app-api/dev/1718992696806-2024-06-21T17:58:16.806Z",
    "artifact": "movie-app-api.zip"
  }
}